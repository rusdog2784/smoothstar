type News @model @versioned {
  id: ID!

  publishedOn: String!
  active: Boolean!

  title: String!
  rawContent: String!

  imgTitle: S3Object
  imgThumbnail: S3Object

  newsParagraphs: [NewsParagraph!]! @connection(name: "NewsParagraphs")
  newsImages: [NewsMedium!]! @connection(name: "NewsMedia")

  tags: [String!]
}

type NewsParagraph @model @versioned {
  id: ID!
  content: String!

  active: Boolean!
  sortOrder: Int!

  news: News! @connection(name: "NewsParagraphs")
}

type NewsMedium @model @versioned {
  id: ID!
  file: S3Object!

  active: Boolean!
  sortOrder: Int!

  news: News! @connection(name: "NewsMedia")
}

type Event @model @versioned {
  id: ID!

  publishedOn: String!
  active: Boolean!

  title: String!
  rawContent: String!

  imgTitle: S3Object
  imgThumbnail: S3Object

  eventParagraphs: [EventParagraph!]! @connection(name: "EventParagraphs")
  eventImages: [EventMedium!]! @connection(name: "EventMedia")

  tags: [String!]
}

type EventParagraph @model @versioned {
  id: ID!
  content: String!

  active: Boolean!
  sortOrder: Int!

  event: Event! @connection(name: "EventParagraphs")
}

type EventMedium @model @versioned {
  id: ID!
  file: S3Object!

  active: Boolean!
  sortOrder: Int!

  event: Event! @connection(name: "EventMedia")
}

type S3Object {
  bucket: String!
  region: String!
  key: String!
}

type UserInfo @model @versioned {
  id: ID!

  lastModifiedOn: String!
  lastSigninOn: String!
  active: Boolean!

  email: String!
  phone_number: String!
  email_verified: Boolean!
  phone_number_verified: Boolean!
  promo_email_preference: Boolean!
  type: String!
  given_name: String!
  family_name: String!
  gender: String!
  locale: String!
  birthdate: String
  city: String
  country: String
}

type SmoothstarRegistration @model @versioned {
  id: ID!

  active: Boolean!

  type: String!
  registrationSubmitDate: String
  registrationApprovedDate: String
  userId: String!
  videoInfoReviewed: Boolean!

  registrationAttempts: Int!
  registrationStatus: String

  orderNum: String
  orderInfo: OrderInfo @connection(name: "SmoothstarRegistrationOrder")

  address: String
  postCode: String
  region: String
  dateOfBirth: String
  smoothstarModel: String
  purchaseDate: String
  shopName: String
  ocrInfo: OCRInfo @connection(name: "SmoothstarRegistrationOCR")

  privacyPolicyReviewed: Boolean!
  extendedPolicyReviewed: Boolean!
  termsOfUseReviewed: Boolean!

  files: [RegistrationMedia!] @connection(name: "SmoothstarRegistrationMedia")
}

type RegistrationMedia @model @versioned {
  id: ID!
  file: S3Object!

  registration: SmoothstarRegistration!
    @connection(name: "SmoothstarRegistrationMedia")

  registrationId: String!
}

type OrderInfo @model @versioned {
  id: ID!

  active: Boolean!

  type: String!
  orderNum: String!
  customerId: String!
  customerEmail: String
  customerPhone: String
  dateOfPurchase: String!
  cityDelivered: String
  countryDelivered: String!

  registration: SmoothstarRegistration
    @connection(name: "SmoothstarRegistrationOrder")
}

type OCRInfo @model @versioned {
  id: ID!

  active: Boolean!

  type: String!
  file: S3Object!

  ocrStatus: String

  customerId: String
  customerEmail: String
  customerPhone: String
  orderNum: String
  address: String
  postCode: String
  region: String
  smoothstarModel: String
  purchaseDate: String
  shopName: String

  cityDelivered: String
  countryDelivered: String

  registration: SmoothstarRegistration
    @connection(name: "SmoothstarRegistrationOCR")
}
